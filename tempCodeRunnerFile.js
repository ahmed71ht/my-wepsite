console.log("ุจุฏุก ุชุดุบูู ุงูููุฏ")
const { Client, LocalAuth, MessageMedia } = require('whatsapp-web.js');
const qrcode = require('qrcode-terminal');
const fs = require('fs');

// ุฅูุดุงุก ุงููุฌูุฏุงุช ุงููุงุฒูุฉ ุฅุฐุง ูู ุชูู ููุฌูุฏุฉ
if (!fs.existsSync('./forms')) {
    fs.mkdirSync('./forms');
}

if (!fs.existsSync('./games')) {
    fs.mkdirSync('./games');
}

if (!fs.existsSync('./questions')) {
    fs.mkdirSync('./questions');
    fs.mkdirSync('./questions/quran', { recursive: true });
    fs.mkdirSync('./questions/prophet', { recursive: true });
    fs.mkdirSync('./questions/hadith', { recursive: true });
}

// ุฅูุดุงุก ููู ูุชุฎุฒูู ุงูุฅุนุฏุงุฏุงุช ุฅุฐุง ูู ููู ููุฌูุฏุงู
if (!fs.existsSync('./settings.json')) {
    fs.writeFileSync('./settings.json', JSON.stringify({
        adminOnlyMode: false,
        groups: {},
        activeGames: {}
    }));
}

// ูุฑุงุกุฉ ุงูุฅุนุฏุงุฏุงุช
let settings = JSON.parse(fs.readFileSync('./settings.json'));

// ุฅูุดุงุก ุนููู ูุงุชุณุงุจ
const client = new Client({
    authStrategy: new LocalAuth(),
    puppeteer: {
        headless: true,
        args: [
            '--no-sandbox',
            '--disable-setuid-sandbox',
            '--disable-dev-shm-usage',
            '--disable-accelerated-2d-canvas',
            '--no-first-run',
            '--no-zygote',
            '--disable-gpu'
        ]
    }
});

// ุนุฑุถ ุฑูุฒ QR ูููุตุงุฏูุฉ
client.on('qr', (qr) => {
    console.log('QR Code received, scan it with your phone:');
    qrcode.generate(qr, { small: true });
});

// ุนูุฏ ุฌุงูุฒูุฉ ุงูุนููู
client.on('ready', () => {
    console.log('Client is ready!');
});

// ุงูุชุญูู ููุง ุฅุฐุง ูุงู ุงููุณุชุฎุฏู ูุดุฑูุงู ูู ุงููุฌููุนุฉ
async function isAdmin(groupId, userId) {
    try {
        const chat = await client.getChatById(groupId);
        if (!chat.isGroup) return false;

        const participants = await chat.participants;
        const participant = participants.find(p => p.id._serialized === userId);

        return participant && participant.isAdmin;
    } catch (error) {
        console.error('Error checking admin status:', error);
        return false;
    }
}

// ุงูุชุญูู ูู ูุถุน "ุงูุจูุช ูููุดุฑููู ููุท"
function isAdminOnlyMode(groupId) {
    if (!settings.groups[groupId]) {
        settings.groups[groupId] = { adminOnlyMode: false };
        saveSettings();
    }
    return settings.groups[groupId].adminOnlyMode;
}

// ุญูุธ ุงูุฅุนุฏุงุฏุงุช
function saveSettings() {
    fs.writeFileSync('./settings.json', JSON.stringify(settings, null, 2));
}

// ุจูุงูุงุช ุงูุฃูุนุงุจ
const gameWords = {
    disassemble: ['ูุงุชุณุงุจ', 'ุชูููุฌุฑุงู', 'ุงูุณุชุบุฑุงู', 'ููุณุจูู', 'ุชููุชุฑ', 'ููุชููุจ', 'ุงููู', 'ูุงูุฌุง', 'ูุฑูุจ', 'ูุดุฑู'],
    assemble: ['ุจ ู ุช', 'ุง ู ู ู', 'ู ุด ุฑ ู', 'ู ุฑ ู ุจ', 'ู ุง ุช ุณ ุง ุจ', 'ุช ู ู ู ุฌ ุฑ ุง ู', 'ู ู ุณ ุจ ู ู'],
    typing: ['ุณุฑุนุฉ ุงููุชุงุจุฉ', 'ุงููู', 'ูุงูุฌุง', 'ูุงุชุณุงุจ', 'ุจูุช ุฑุงูุฒู', 'ูุฑูุจ ุงูุงููู', 'ูุฑุญุจุง ุจุงูุฌููุน'],
    reverse: ['ุงููู', 'ูุงูุฌุง', 'ูุงุชุณุงุจ', 'ุชูููุฌุฑุงู', 'ูุดุฑู', 'ูุฑูุจ', 'ุฑุงูุฒู']
};

// ุฃุณุฆูุฉ ุฏูููุฉ
const religiousQuestions = {
    quran: [
        { question: 'ูู ุนุฏุฏ ุณูุฑ ุงููุฑุขู ุงููุฑููุ', answer: '114' },
        { question: 'ูุง ูู ุฃุทูู ุณูุฑุฉ ูู ุงููุฑุขู ุงููุฑููุ', answer: 'ุงูุจูุฑุฉ' },
        { question: 'ูุง ูู ุฃูุตุฑ ุณูุฑุฉ ูู ุงููุฑุขู ุงููุฑููุ', answer: 'ุงูููุซุฑ' }
    ],
    prophet: [
        { question: 'ูุชู ููุฏ ุงููุจู ูุญูุฏ ุตูู ุงููู ุนููู ูุณููุ', answer: 'ุนุงู ุงูููู' },
        { question: 'ูุง ุงุณู ุฃู ุงููุจู ูุญูุฏ ุตูู ุงููู ุนููู ูุณููุ', answer: 'ุขููุฉ ุจูุช ููุจ' },
        { question: 'ูุง ุงุณู ุฒูุฌุฉ ุงููุจู ุงูุฃูููุ', answer: 'ุฎุฏูุฌุฉ' }
    ],
    hadith: [
        { question: 'ุฃููู ุงูุญุฏูุซ: "ุฅููุง ุงูุฃุนูุงู..."', answer: 'ุจุงูููุงุช' },
        { question: 'ูู ูู ุฑุงูู ุญุฏูุซ "ูู ุญุณู ุฅุณูุงู ุงููุฑุก ุชุฑูู ูุง ูุง ูุนููู"ุ', answer: 'ุฃุจู ูุฑูุฑุฉ' },
        { question: 'ูู ุนุฏุฏ ุงูุฃุญุงุฏูุซ ูู ุตุญูุญ ุงูุจุฎุงุฑูุ', answer: '7563' }
    ]
};

// ุจุฏุก ูุนุจุฉ ุฌุฏูุฏุฉ
function startGame(groupId, gameType) {
    if (!settings.activeGames) {
        settings.activeGames = {};
    }

    let word = '';
    let answer = '';

    switch (gameType) {
        case 'disassemble':
            word = gameWords.disassemble[Math.floor(Math.random() * gameWords.disassemble.length)];
            answer = word.split('').join(' ');
            break;
        case 'assemble':
            word = gameWords.assemble[Math.floor(Math.random() * gameWords.assemble.length)];
            answer = word.replace(/ /g, '');
            break;
        case 'typing':
            word = gameWords.typing[Math.floor(Math.random() * gameWords.typing.length)];
            answer = word;
            break;
        case 'reverse':
            word = gameWords.reverse[Math.floor(Math.random() * gameWords.reverse.length)];
            answer = word.split('').reverse().join('');
            break;
    }

    settings.activeGames[groupId] = {
        type: gameType,
        word: word,
        answer: answer,
        startTime: Date.now(),
        active: true
    };

    saveSettings();
    return word;
}

// ุจุฏุก ุณุคุงู ุฏููู
function startReligiousQuestion(groupId, questionType) {
    if (!settings.activeGames) {
        settings.activeGames = {};
    }

    let questions;
    switch (questionType) {
        case 'quran':
            questions = religiousQuestions.quran;
            break;
        case 'prophet':
            questions = religiousQuestions.prophet;
            break;
        case 'hadith':
            questions = religiousQuestions.hadith;
            break;
    }

    const questionObj = questions[Math.floor(Math.random() * questions.length)];

    settings.activeGames[groupId] = {
        type: 'question',
        questionType: questionType,
        question: questionObj.question,
        answer: questionObj.answer,
        startTime: Date.now(),
        active: true
    };

    saveSettings();
    return questionObj.question;
}

// ุงูุชุญูู ูู ุฅุฌุงุจุฉ ุงููุนุจุฉ
function checkGameAnswer(groupId, answer) {
    if (!settings.activeGames || !settings.activeGames[groupId] || !settings.activeGames[groupId].active) {
        return { correct: false, message: 'ูุง ุชูุฌุฏ ูุนุจุฉ ูุดุทุฉ ุญุงููุงู' };
    }

    const game = settings.activeGames[groupId];
    const correctAnswer = game.answer.trim().toLowerCase();
    const userAnswer = answer.trim().toLowerCase();

    if (correctAnswer === userAnswer) {
        const timeTaken = ((Date.now() - game.startTime) / 1000).toFixed(2);
        game.active = false;
        saveSettings();

        return {
            correct: true,
            message: `ุฅุฌุงุจุฉ ุตุญูุญุฉ! ๐\nุงูููุช ุงููุณุชุบุฑู: ${timeTaken} ุซุงููุฉ`,
            timeTaken: timeTaken
        };
    }

    return { correct: false };
}

// ูุนุงูุฌุฉ ุงูุฑุณุงุฆู ุงููุงุฑุฏุฉ
client.on('message', async (message) => {
    try {
        const chat = await message.getChat();
        const sender = await message.getContact();
        const senderId = sender.id._serialized;

        // ุชุฌุงูู ุงูุฑุณุงุฆู ูู ุบูุฑ ุงููุฌููุนุงุช
        if (!chat.isGroup) return;

        const groupId = chat.id._serialized;
        const isUserAdmin = await isAdmin(groupId, senderId);
        const adminOnlyMode = isAdminOnlyMode(groupId);

        // ุงูุชุญูู ูู ุงูุฃูุนุงุจ ุงููุดุทุฉ
        if (settings.activeGames && settings.activeGames[groupId] && settings.activeGames[groupId].active) {
            const result = checkGameAnswer(groupId, message.body);
            if (result.correct) {
                await message.reply(`${result.message}\nุงููุงุฆุฒ: @${sender.number}`, { mentions: [sender] });
                return;
            }
        }

        // ุงูุชุญูู ูู ุงูุฃูุงูุฑ ุงูุฃุณุงุณูุฉ
        if (message.body === '.ุจูุช' || message.body === '.ุฑุงูุฒู') {
            await message.reply('ููุง');
            return;
        }

        // ุงูุชุญูู ูู ุฃูุงูุฑ ุงููุดุฑููู
        if (message.body === '.ุงูุงูุฑ') {
            let commandsText = '*ูุงุฆูุฉ ุงูุฃูุงูุฑ:*\n\n';

            // ูุณู ุงูุฃูุงูุฑ ุงูุนุงูุฉ
            commandsText += '*ุงูุฃูุงูุฑ ุงูุนุงูุฉ:*\n';
            commandsText += 'โข .ุจูุช ุฃู .ุฑุงูุฒู - ููุชุญูู ูู ุญุงูุฉ ุงูุจูุช\n';
            commandsText += 'โข .ุงูุงูุฑ - ูุนุฑุถ ูุงุฆูุฉ ุงูุฃูุงูุฑ\n\n';

            // ูุณู ุฃูุงูุฑ ุงููุดุฑููู
            commandsText += '*ุฃูุงูุฑ ุงููุดุฑููู:*\n';
            commandsText += 'โข .ุทุฑุฏ @ุงููุณุชุฎุฏู - ูุทุฑุฏ ูุณุชุฎุฏู ูู ุงููุฌููุนุฉ\n';
            commandsText += 'โข .ุงุนูุงุก @ุงููุณุชุฎุฏู - ูุฅุฒุงูุฉ ุงูุฅุดุฑุงู ุนู ูุณุชุฎุฏู\n';
            commandsText += 'โข .ุงุถุงูุฉ_ุนุถู @ุฑูู - ูุฅุถุงูุฉ ูุณุชุฎุฏู ุฅูู ุงููุฌููุนุฉ\n';
            commandsText += 'โข .ุชุดุบูู_ุงูุจูุช_ุจุณ_ููุงุฏูู - ูุชูุนูู ูุถุน ุงููุดุฑููู ููุท\n';
            commandsText += 'โข .ุงุทูุงุก_ุงูุจูุช_ุจุณ_ููุงุฏูู - ูุฅูุบุงุก ูุถุน ุงููุดุฑููู ููุท\n\n';

            // ูุณู ุงูุงุณุชูุงุฑุงุช (ูููุดุฑููู ููุท)
            commandsText += '*ุฃูุงูุฑ ุงูุงุณุชูุงุฑุงุช (ูููุดุฑููู ููุท):*\n';
            commandsText += 'โข .ุงุถุงูุฉ_ุงุณุชูุงุฑุฉ ุงูุงุณู=ุงุณู_ุงูุงุณุชูุงุฑุฉ - ูุฅุถุงูุฉ ุงุณุชูุงุฑุฉ ุฌุฏูุฏุฉ\n';
            commandsText += 'โข ุงุณุชูุงุฑุฉ_ุงุณู_ุงูุงุณุชูุงุฑุฉ - ูุงุณุชุฎุฏุงู ุงุณุชูุงุฑุฉ ูุญููุธุฉ\n\n';

            // ูุณู ุงููุนุงููุงุช
            commandsText += '*๐ฎ ูุณู ุงููุนุงููุงุช:*\n';
            commandsText += 'โข .ุชูููู - ุจุฏุก ูุนุจุฉ ุชูููู ุงููููุงุช\n';
            commandsText += 'โข .ุชุฑููุจ - ุจุฏุก ูุนุจุฉ ุชุฑููุจ ุงููููุงุช\n';
            commandsText += 'โข .ูุชุงุจุฉ - ุจุฏุก ูุนุจุฉ ุณุฑุนุฉ ุงููุชุงุจุฉ\n';
            commandsText += 'โข .ุนูุณ - ุจุฏุก ูุนุจุฉ ุนูุณ ุงููููุฉ\n\n';

            // ูุณู ุงูุฃุณุฆูุฉ ุงูุฏูููุฉ
            commandsText += '*๐ ูุณู ุงูุฃุณุฆูุฉ ุงูุฏูููุฉ:*\n';
            commandsText += 'โข .ุณุคุงู_ูุฑุขู - ุทุฑุญ ุณุคุงู ูู ุงููุฑุขู ุงููุฑูู\n';
            commandsText += 'โข .ุณุคุงู_ูุจูู - ุทุฑุญ ุณุคุงู ุนู ุงูุณูุฑุฉ ุงููุจููุฉ\n';
            commandsText += 'โข .ุณุคุงู_ุญุฏูุซ - ุทุฑุญ ุณุคุงู ูู ุงูุฃุญุงุฏูุซ ุงููุจููุฉ\n';

            await message.reply(commandsText);
            return;
        }

        // ุงูุชุญูู ูู ูุถุน ุงููุดุฑููู ููุท
        if (adminOnlyMode && !isUserAdmin) {
            return; // ุชุฌุงูู ุงูุฑุณุงุฆู ูู ุบูุฑ ุงููุดุฑููู ูู ูุถุน ุงููุดุฑููู ููุท
        }

        // ุฃูุงูุฑ ุงููุนุงููุงุช (ูุชุงุญุฉ ููุฌููุน ุฅุฐุง ูู ููู ูุถุน ุงููุดุฑููู ููุท ููุนูุงู)
        if (message.body === '.ุชูููู') {
            const word = startGame(groupId, 'disassemble');
            await message.reply(`*๐ฎ ูุนุจุฉ ุชูููู ุงููููุงุช*\n\nูู ุจุชูููู ุงููููุฉ ุงูุชุงููุฉ (ุงูุชุจ ุงูุญุฑูู ููุตููุฉ ุจูุณุงูุงุช):\n\n*${word}*`);
            return;
        }

        if (message.body === '.ุชุฑููุจ') {
            const word = startGame(groupId, 'assemble');
            await message.reply(`*๐ฎ ูุนุจุฉ ุชุฑููุจ ุงููููุงุช*\n\nูู ุจุชุฑููุจ ุงููููุฉ ุงูุชุงููุฉ (ุงูุชุจ ุงููููุฉ ุจุฏูู ูุณุงูุงุช):\n\n*${word}*`);
            return;
        }

        if (message.body === '.ูุชุงุจุฉ') {
            const word = startGame(groupId, 'typing');
            await message.reply(`*๐ฎ ูุนุจุฉ ุณุฑุนุฉ ุงููุชุงุจุฉ*\n\nุงูุชุจ ุงูุฌููุฉ ุงูุชุงููุฉ ุจุณุฑุนุฉ:\n\n*${word}*`);
            return;
        }

        if (message.body === '.ุนูุณ') {
            const word = startGame(groupId, 'reverse');
            await message.reply(`*๐ฎ ูุนุจุฉ ุนูุณ ุงููููุฉ*\n\nูู ุจูุชุงุจุฉ ุงููููุฉ ุงูุชุงููุฉ ุจุงูุนูุณ:\n\n*${word}*`);
            return;
        }

        // ุฃูุงูุฑ ุงูุฃุณุฆูุฉ ุงูุฏูููุฉ
        if (message.body === '.ุณุคุงู_ูุฑุขู') {
            const question = startReligiousQuestion(groupId, 'quran');
            await message.reply(`*๐ ุณุคุงู ูู ุงููุฑุขู ุงููุฑูู*\n\n${question}`);
            return;
        }

        if (message.body === '.ุณุคุงู_ูุจูู') {
            const question = startReligiousQuestion(groupId, 'prophet');
            await message.reply(`*๐ ุณุคุงู ูู ุงูุณูุฑุฉ ุงููุจููุฉ*\n\n${question}`);
            return;
        }

        if (message.body === '.ุณุคุงู_ุญุฏูุซ') {
            const question = startReligiousQuestion(groupId, 'hadith');
            await message.reply(`*๐ ุณุคุงู ูู ุงูุฃุญุงุฏูุซ ุงููุจููุฉ*\n\n${question}`);
            return;
        }

        // ุฃูุงูุฑ ุงููุดุฑููู
        if (isUserAdmin) {
            // ุฃูุฑ ุทุฑุฏ ูุณุชุฎุฏู
            if (message.body.startsWith('.ุทุฑุฏ ')) {
                const mentionedUsers = await message.getMentions();

                if (mentionedUsers.length === 0) {
                    await message.reply('ูุฑุฌู ุฐูุฑ ุงููุณุชุฎุฏู ุงูุฐู ุชุฑูุฏ ุทุฑุฏู ุจุงุณุชุฎุฏุงู @');
                    return;
                }

                const userToKick = mentionedUsers[0];
                const userToKickId = userToKick.id._serialized;

                try {
                    await chat.removeParticipants([userToKickId]);
                    await message.reply(`ุชู ุทุฑุฏ @${userToKick.number} ูู ุงููุฌููุนุฉ`, { mentions: [userToKick] });
                } catch (error) {
                    await message.reply('ูุดู ุทุฑุฏ ุงููุณุชุฎุฏู. ุชุฃูุฏ ูู ุฃู ูุฏูู ุงูุตูุงุญูุงุช ุงููุงุฒูุฉ.');
                }
                return;
            }

            // ุฃูุฑ ุฅุฒุงูุฉ ุงูุฅุดุฑุงู
            if (message.body.startsWith('.ุงุนูุงุก ')) {
                const mentionedUsers = await message.getMentions();

                if (mentionedUsers.length === 0) {
                    await message.reply('ูุฑุฌู ุฐูุฑ ุงููุณุชุฎุฏู ุงูุฐู ุชุฑูุฏ ุฅุฒุงูุฉ ุงูุฅุดุฑุงู ุนูู ุจุงุณุชุฎุฏุงู @');
                    return;
                }

                const userToDemote = mentionedUsers[0];
                const userToDemoteId = userToDemote.id._serialized;

                try {
                    await chat.demoteParticipants([userToDemoteId]);
                    await message.reply(`ุชู ุฅุฒุงูุฉ ุงูุฅุดุฑุงู ุนู @${userToDemote.number}`, { mentions: [userToDemote] });
                } catch (error) {
                    await message.reply('ูุดู ุฅุฒุงูุฉ ุงูุฅุดุฑุงู. ุชุฃูุฏ ูู ุฃู ูุฏูู ุงูุตูุงุญูุงุช ุงููุงุฒูุฉ.');
                }
                return;
            }

            // ุฃูุฑ ุฅุถุงูุฉ ุนุถู
            if (message.body.startsWith('.ุงุถุงูุฉ_ุนุถู ')) {
                const numberToAdd = message.body.split(' ')[1].replace('@', '');

                if (!numberToAdd) {
                    await message.reply('ูุฑุฌู ุชุญุฏูุฏ ุฑูู ุงููุณุชุฎุฏู ุงูุฐู ุชุฑูุฏ ุฅุถุงูุชู');
                    return;
                }

                // ุชูุณูู ุฑูู ุงููุงุชู ุจุงูุตูุบุฉ ุงูุตุญูุญุฉ
                let formattedNumber = numberToAdd;
                if (!formattedNumber.includes('@c.us')) {
                    formattedNumber = `${formattedNumber}@c.us`;
                }

                try {
                    await chat.addParticipants([formattedNumber]);
                    await message.reply(`ุชูุช ุฅุถุงูุฉ ุงููุณุชุฎุฏู ${numberToAdd} ุฅูู ุงููุฌููุนุฉ`);
                } catch (error) {
                    await message.reply('ูุดู ุฅุถุงูุฉ ุงููุณุชุฎุฏู. ุชุฃูุฏ ูู ุตุญุฉ ุงูุฑูู ูุฃู ูุฏูู ุงูุตูุงุญูุงุช ุงููุงุฒูุฉ.');
                }
                return;
            }

            // ุฃูุฑ ุชูุนูู ูุถุน ุงููุดุฑููู ููุท
            if (message.body === '.ุชุดุบูู_ุงูุจูุช_ุจุณ_ููุงุฏูู') {
                if (!settings.groups[groupId]) {
                    settings.groups[groupId] = {};
                }
                settings.groups[groupId].adminOnlyMode = true;
                saveSettings();
                await message.reply('ุชู ุชูุนูู ูุถุน "ุงูุจูุช ูููุดุฑููู ููุท"');
                return;
            }

            // ุฃูุฑ ุฅูุบุงุก ูุถุน ุงููุดุฑููู ููุท
            if (message.body === '.ุงุทูุงุก_ุงูุจูุช_ุจุณ_ููุงุฏูู') {
                if (!settings.groups[groupId]) {
                    settings.groups[groupId] = {};
                }
                settings.groups[groupId].adminOnlyMode = false;
                saveSettings();
                await message.reply('ุชู ุฅูุบุงุก ูุถุน "ุงูุจูุช ูููุดุฑููู ููุท"');
                return;
            }

            // ุฃูุฑ ุฅุถุงูุฉ ุงุณุชูุงุฑุฉ (ูููุดุฑููู ููุท)
            if (message.body.startsWith('.ุงุถุงูุฉ_ุงุณุชูุงุฑุฉ ')) {
                const formContent = message.body.substring('.ุงุถุงูุฉ_ุงุณุชูุงุฑุฉ '.length);
                const formNameMatch = formContent.match(/ุงูุงุณู=([^\s]+)/);

                if (!formNameMatch) {
                    await message.reply('ุตูุบุฉ ุงูุฃูุฑ ุบูุฑ ุตุญูุญุฉ. ุงูุฑุฌุงุก ุงุณุชุฎุฏุงู: .ุงุถุงูุฉ_ุงุณุชูุงุฑุฉ ูุญุชูู_ุงูุงุณุชูุงุฑุฉ ุงูุงุณู=ุงุณู_ุงูุงุณุชูุงุฑุฉ');
                    return;
                }

                const formName = formNameMatch[1];
                let formText = formContent.replace(`ุงูุงุณู=${formName}`, '').trim();

                // ุญูุธ ุงูุงุณุชูุงุฑุฉ ูู ููู
                fs.writeFileSync(`./forms/${formName}.txt`, formText);
                await message.reply(`ุชู ุญูุธ ุงูุงุณุชูุงุฑุฉ ุจุงุณู: ${formName}`);
                return;
            }

            // ุงุณุชุฎุฏุงู ุงูุงุณุชูุงุฑุงุช (ูููุดุฑููู ููุท)
            if (message.body.startsWith('ุงุณุชูุงุฑุฉ_')) {
                const formName = message.body.substring('ุงุณุชูุงุฑุฉ_'.length);
                const formPath = `./forms/${formName}.txt`;

                if (fs.existsSync(formPath)) {
                    const formContent = fs.readFileSync(formPath, 'utf8');
                    await message.reply(formContent);
                } else {
                    await message.reply(`ุงูุงุณุชูุงุฑุฉ "${formName}" ุบูุฑ ููุฌูุฏุฉ`);
                }
                return;
            }
        }

    } catch (error) {
        console.error('Error processing message:', error);
    }
});

// ุชุดุบูู ุงูุนููู
client.initialize();
